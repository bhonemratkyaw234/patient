/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.patient;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import personalDb.DbPersonal;
import personalDb.Personal;
import personalDb.PersonalModel;

/**
 *
 * @author hp
 */
public class personal_info extends javax.swing.JFrame {
    
    DbPersonal dbcon=new DbPersonal();
    

    /**
     * Creates new form personal_info
     */
    public personal_info() {
        initComponents();
        reloadPersonal();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        txtpid = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        txtage = new javax.swing.JTextField();
        lblAddress = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaddress = new javax.swing.JTextArea();
        cmdSave = new javax.swing.JButton();
        lblId = new javax.swing.JLabel();
        cmdUpdate = new javax.swing.JButton();
        lblSex1 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblSex4 = new javax.swing.JLabel();
        txtcontactno = new javax.swing.JTextField();
        lblSex6 = new javax.swing.JLabel();
        lblName2 = new javax.swing.JLabel();
        Clear = new javax.swing.JButton();
        rbFemale = new javax.swing.JRadioButton();
        rbMale = new javax.swing.JRadioButton();
        lblSex = new javax.swing.JLabel();
        txtEdit = new javax.swing.JButton();
        cmdDelete1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblPersonal = new javax.swing.JTable();
        lblSex5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtsymptoms = new javax.swing.JTextArea();
        cmbbloodtype = new javax.swing.JComboBox<>();
        lblSex7 = new javax.swing.JLabel();
        DateOfBirth = new com.toedter.calendar.JDateChooser();
        txtname = new javax.swing.JTextField();
        txtnid = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnsearch = new javax.swing.JButton();
        txtsearch = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Patient Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 48))); // NOI18N
        jPanel2.setForeground(new java.awt.Color(51, 51, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtpid.setEditable(false);
        txtpid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));
        txtpid.setEditable(false);
        txtpid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpidActionPerformed(evt);
            }
        });
        jPanel2.add(txtpid, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 40, 32));

        lblName.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        lblName.setText("Patient ID  :  ");
        jPanel2.add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 100, 30));

        lblAge.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        lblAge.setText("Age :");
        jPanel2.add(lblAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, 50, 20));

        txtage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));
        jPanel2.add(txtage, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 200, 46, 30));

        lblAddress.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        lblAddress.setText("Address : ");
        jPanel2.add(lblAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 270, 90, 20));

        txtaddress.setColumns(20);
        txtaddress.setRows(5);
        txtaddress.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));
        jScrollPane1.setViewportView(txtaddress);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 270, 234, 70));

        cmdSave.setBackground(new java.awt.Color(102, 255, 102));
        cmdSave.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cmdSave.setForeground(new java.awt.Color(255, 255, 255));
        cmdSave.setText("Save");
        cmdSave.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), null));
        cmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveActionPerformed(evt);
            }
        });
        jPanel2.add(cmdSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 700, 80, 30));

        lblId.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        lblId.setText("NID  :");
        jPanel2.add(lblId, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 250, 60, 20));

        cmdUpdate.setBackground(new java.awt.Color(51, 0, 153));
        cmdUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cmdUpdate.setForeground(new java.awt.Color(255, 255, 255));
        cmdUpdate.setText("Update");
        cmdUpdate.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(204, 255, 255), new java.awt.Color(204, 255, 255), null));
        cmdUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdUpdateActionPerformed(evt);
            }
        });
        jPanel2.add(cmdUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 700, 80, 30));

        lblSex1.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        lblSex1.setText("Email :");
        jPanel2.add(lblSex1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 210, 60, 20));

        txtEmail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });
        jPanel2.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 210, 170, 32));

        lblSex4.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        lblSex4.setText("Contact no :");
        jPanel2.add(lblSex4, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 150, 90, 20));

        txtcontactno.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));
        txtcontactno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcontactnoActionPerformed(evt);
            }
        });
        jPanel2.add(txtcontactno, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 150, 170, 27));

        lblSex6.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        lblSex6.setText("Sex :");
        jPanel2.add(lblSex6, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, 60, 20));

        lblName2.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        lblName2.setText("Name  :  ");
        jPanel2.add(lblName2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, 70, 30));

        Clear.setText("Clear");
        Clear.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 0, 51), new java.awt.Color(0, 0, 0), new java.awt.Color(255, 0, 0), new java.awt.Color(255, 255, 255)));
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });
        jPanel2.add(Clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 40, 70, 40));

        buttonGroup1.add(rbFemale);
        rbFemale.setText("Female");
        rbFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbFemaleActionPerformed(evt);
            }
        });
        jPanel2.add(rbFemale, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 310, 70, -1));

        buttonGroup1.add(rbMale);
        rbMale.setSelected(true);
        rbMale.setText("Male");
        rbMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMaleActionPerformed(evt);
            }
        });
        jPanel2.add(rbMale, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 310, -1, -1));

        lblSex.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblSex.setText("Date of Birth :");
        jPanel2.add(lblSex, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 200, 110, 20));

        txtEdit.setBackground(new java.awt.Color(255, 153, 51));
        txtEdit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtEdit.setForeground(new java.awt.Color(255, 255, 255));
        txtEdit.setText("Edit");
        txtEdit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(255, 255, 0), new java.awt.Color(255, 255, 0), null));
        txtEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEditActionPerformed(evt);
            }
        });
        jPanel2.add(txtEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 700, 80, 30));

        cmdDelete1.setBackground(new java.awt.Color(255, 51, 51));
        cmdDelete1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cmdDelete1.setForeground(new java.awt.Color(255, 255, 255));
        cmdDelete1.setText("Delete");
        cmdDelete1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), null));
        cmdDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDelete1ActionPerformed(evt);
            }
        });
        jPanel2.add(cmdDelete1, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 700, 70, 30));

        tblPersonal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204)));
        tblPersonal.setModel(new PersonalModel(
            PersonalModel.getData(), PersonalModel.getColumns()
        ));
        tblPersonal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPersonalMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblPersonal);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 430, 1070, 260));

        lblSex5.setBackground(new java.awt.Color(255, 255, 255));
        lblSex5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblSex5.setText("Symptoms :");
        jPanel2.add(lblSex5, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 280, 90, -1));

        txtsymptoms.setColumns(20);
        txtsymptoms.setRows(5);
        txtsymptoms.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        jScrollPane4.setViewportView(txtsymptoms);

        jPanel2.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 260, -1, -1));

        cmbbloodtype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B", "O", "AB" }));
        cmbbloodtype.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        jPanel2.add(cmbbloodtype, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 140, 120, -1));

        lblSex7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblSex7.setText("Blood type :");
        jPanel2.add(lblSex7, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 140, 90, -1));

        DateOfBirth.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 0, 255)));
        jPanel2.add(DateOfBirth, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 200, 150, -1));

        txtname.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));
        txtname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnameActionPerformed(evt);
            }
        });
        jPanel2.add(txtname, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 150, 180, 32));

        txtnid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 255)));
        txtnid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnidActionPerformed(evt);
            }
        });
        jPanel2.add(txtnid, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 250, 180, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\hp\\Desktop\\winter-blue-mountain-background-vector\\job503-wit-049.jpg")); // NOI18N
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 420, 1160, 350));

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\hp\\Downloads\\hospital-sign.png")); // NOI18N
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 0, -1, 60));

        btnsearch.setBackground(new java.awt.Color(51, 153, 255));
        btnsearch.setText("Search");
        btnsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchActionPerformed(evt);
            }
        });
        jPanel2.add(btnsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 390, 80, 30));

        txtsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchActionPerformed(evt);
            }
        });
        jPanel2.add(txtsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 390, 170, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 818, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtpidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpidActionPerformed

    private void cmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveActionPerformed
       
        try {
        String name = txtname.getText().trim();
        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(jPanel2, "Name cannot be empty", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String ageText = txtage.getText().trim();
        int age;
       //age
       try {
            age = Integer.parseInt(ageText);
            if (age < 1 || age > 110) {
                JOptionPane.showMessageDialog(jPanel2, "Age must be between 1 and 110", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(jPanel2, "Please enter a valid number for Age", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        //for nid

        String nid = txtnid.getText().trim();
        if (nid.isEmpty()) {
            JOptionPane.showMessageDialog(jPanel2, "NID cannot be empty", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String sex = rbMale.isSelected() ? "Male" : "Female";

        String contactNo = txtcontactno.getText().trim();
        if (contactNo.isEmpty()) {
            JOptionPane.showMessageDialog(jPanel2, "Contact Number cannot be empty", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
//Email
     
    String email = txtEmail.getText().trim();
    try{
    if (!email.matches("^[a-zA-Z0-9_!#$%&'*+/=?`{|}~^.-]+@[a-zA-Z0-9.-]+$")) {
        JOptionPane.showMessageDialog(jPanel2, "Email canbe a valid Gmail address (ending with @gmail.com).", "Warning", JOptionPane.WARNING_MESSAGE);
        return;
    }
     } catch (Exception ex) {
    JOptionPane.showMessageDialog(jPanel2, "An error occurred during email validation: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    Logger.getLogger(DbPersonal.class.getName()).log(Level.SEVERE, null, ex);
}
//Email

        String address = txtaddress.getText().trim();
        if (address.isEmpty()) {
            JOptionPane.showMessageDialog(jPanel2, "Address cannot be empty", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String bloodType = cmbbloodtype.getSelectedItem().toString();
        
        String symptoms = txtsymptoms.getText().trim();
          if (symptoms.isEmpty()) {
            JOptionPane.showMessageDialog(jPanel2, "Address cannot be empty", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

       //Date Of Birth
        java.util.Date selectedDate = DateOfBirth.getDate();
        if (selectedDate == null) {
            JOptionPane.showMessageDialog(jPanel2, "Please select a valid Date of Birth", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        java.util.Date cur_date = new java.util.Date();
        if (selectedDate.after(cur_date)) {
            JOptionPane.showMessageDialog(jPanel2, "Date of Birth cannot be in the future", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String dateOfBirth = sdf.format(selectedDate);

        DbPersonal dbcon = new DbPersonal();
        Personal personal = new Personal();
        personal.setName(name);
        personal.setAge(age);
        personal.setNid(nid);
        personal.setSex(sex);
        personal.setContactNo(contactNo);
        personal.setEmail(email);
        personal.setAddress(address);
        personal.setBloodType(bloodType);
        personal.setSymptoms(symptoms);
        personal.setDateOfBirth(dateOfBirth);

        dbcon.save(personal);

        JOptionPane.showMessageDialog(jPanel2, "The new personal record has been saved.");
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(jPanel2, "Error saving the record: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        Logger.getLogger(DbPersonal.class.getName()).log(Level.SEVERE, null, ex);
    }

    reloadPersonal();
    }//GEN-LAST:event_cmdSaveActionPerformed

    private void cmdUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdUpdateActionPerformed
        try {
            int id = Integer.parseInt(txtpid.getText());
            String name = txtname.getText();

            String ageText = txtage.getText().trim();
            int age; 
            try{
                age=Integer.parseInt(ageText);
                if(age<1 || age>110){
                  JOptionPane.showMessageDialog(jPanel2,"Age must be between 1 and 110","Warning",JOptionPane.WARNING_MESSAGE );
                  return;
                  } 
                }catch(NumberFormatException ex){
                    JOptionPane.showMessageDialog(jPanel2,"Please enter a valid number for Age", "Warning",JOptionPane.WARNING_MESSAGE);
                    return;
            }
            String nid = txtnid.getText().trim();
            if(nid.isEmpty()){
                JOptionPane.showMessageDialog(jPanel2,"NID is empty","Warning",JOptionPane.WARNING_MESSAGE);
                return;
            }
            String sex = rbMale.isSelected() ? "Male" : "Female";
            String contactNo = txtcontactno.getText().trim();
            if(contactNo.isEmpty()){
                JOptionPane.showMessageDialog(jPanel2,"Contact Number is empty","Warning ",JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            String email = txtEmail.getText().trim();
            try{
                if(!email.matches("^[a-zA-Z0-9_!#$%&'*+/=?`{|}~^.-]+@[a-zA-Z0-9.-]+$")){
                  JOptionPane.showMessageDialog(jPanel2,"You don't know gmail validation, it is ending @gmail.com","Warning",JOptionPane.WARNING_MESSAGE);
                  return;
                }
            }catch(Exception ex){
                JOptionPane.showMessageDialog(jPanel2,"Error occur during gmail validation"+ex.getMessage(),"Error",JOptionPane.WARNING_MESSAGE );
                return;
            }
            
            
            String address = txtaddress.getText();
            if(address.isEmpty()){
                JOptionPane.showMessageDialog(jPanel2,"Address is empty","Warning",JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            String bloodType = cmbbloodtype.getSelectedItem().toString();
            String symptoms = txtsymptoms.getText().trim();
            if(symptoms.isEmpty()){
                JOptionPane.showMessageDialog(jPanel2,"Symptoms is empty","Warning",JOptionPane.WARNING_MESSAGE);
                return;
            }

            java.util.Date selectedDate = DateOfBirth.getDate();
            if (selectedDate == null) {
                JOptionPane.showMessageDialog(jPanel2, "Please select a valid Date of Birth", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            java.util.Date c = new java.util.Date();
            if (selectedDate.after(c)) {
            JOptionPane.showMessageDialog(jPanel2, "Date of Birth cannot be in the future", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
            }
           
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String dateOfBirth = sdf.format(selectedDate);

            DbPersonal dbcon = new DbPersonal();
            Personal personal = new Personal();

            personal.setId(id);
            personal.setName(name);
            personal.setAge(age);
            personal.setNid(nid);
            personal.setSex(sex);
            personal.setContactNo(contactNo);
            personal.setEmail(email);
            personal.setAddress(address);
            personal.setBloodType(bloodType);
            personal.setSymptoms(symptoms);
            personal.setDateOfBirth(dateOfBirth);

            dbcon.update(personal);

            JOptionPane.showMessageDialog(jPanel2, "The personal record has been updated.");
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(jPanel2, "Please enter a valid number for Age or ID.", "Warning", JOptionPane.INFORMATION_MESSAGE);
            Logger.getLogger(DbPersonal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(jPanel2, "Please ensure all required fields are filled, including a valid date.", "Warning", JOptionPane.INFORMATION_MESSAGE);
            Logger.getLogger(DbPersonal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(jPanel2, "Error updating the personal record: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(DbPersonal.class.getName()).log(Level.SEVERE, null, ex);
        }

        reloadPersonal();
    }//GEN-LAST:event_cmdUpdateActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtcontactnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcontactnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcontactnoActionPerformed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        txtpid.setText(null);
        txtname.setText(null);
        txtage.setText(null);
        txtnid.setText(null);
        rbMale.setSelected(false);
        rbFemale.setSelected(false);
        txtcontactno.setText(null);
        txtEmail.setText(null);
        txtaddress.setText(null);
        cmbbloodtype.setSelectedIndex(0);
        txtsymptoms.setText(null);
        DateOfBirth.setDate(null);

        JOptionPane.showMessageDialog(jPanel2, "All fields have been cleared.");
    }//GEN-LAST:event_ClearActionPerformed

    private void rbFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbFemaleActionPerformed
        String sex="Female";
    }//GEN-LAST:event_rbFemaleActionPerformed

    private void rbMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMaleActionPerformed
        String sex="Male";
    }//GEN-LAST:event_rbMaleActionPerformed

    private void txtEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEditActionPerformed
        try {
            int personalId = Integer.parseInt(JOptionPane.showInputDialog("Please enter Personal ID"));
            Personal personal = new DbPersonal().findById(personalId);

            if (personal == null) {
                JOptionPane.showMessageDialog(jPanel2, "Personal record is not found for ID " + personalId);
            } else {
                txtpid.setText(Integer.toString(personal.getId()));
                txtname.setText(personal.getName());
                txtage.setText(Integer.toString(personal.getAge()));
                txtnid.setText(personal.getNid());
                if ("Male".equals(personal.getSex())) {
                    rbMale.setSelected(true);
                } else {
                    rbFemale.setSelected(true);
                }
                txtcontactno.setText(personal.getContactNo());
                txtEmail.setText(personal.getEmail());
                txtaddress.setText(personal.getAddress());
                cmbbloodtype.setSelectedItem(personal.getBloodType());
                txtsymptoms.setText(personal.getSymptoms());
                String dateOfBirth = personal.getDateOfBirth();
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                java.util.Date utilDate = sdf.parse(dateOfBirth);
                DateOfBirth.setDate(utilDate);

            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(jPanel2, "Invalid ID entered. Please enter a valid number.", "Warning", JOptionPane.INFORMATION_MESSAGE);
            Logger.getLogger(DbPersonal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(jPanel2, "Error retrieving the personal record: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(DbPersonal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtEditActionPerformed

    private void cmdDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDelete1ActionPerformed
        try {
            int id = Integer.parseInt(txtpid.getText());
            DbPersonal dbcon = new DbPersonal();

            int confirmation = JOptionPane.showConfirmDialog(
                jPanel2,
                "Are you sure you want to delete the record for ID '" + id + "'?",
                "Delete Confirmation",
                JOptionPane.YES_NO_OPTION
            );

            if (confirmation == JOptionPane.YES_OPTION) {
                dbcon.delete(id);
                JOptionPane.showMessageDialog(jPanel2, "The record with ID '" + id + "' has been deleted!");

                txtpid.setText(null);
                txtname.setText(null);
                txtage.setText(null);
                txtnid.setText(null);
                rbMale.setSelected(false);
                rbFemale.setSelected(false);
                txtcontactno.setText(null);
                txtEmail.setText(null);
                txtaddress.setText(null);
                cmbbloodtype.setSelectedIndex(0);
                txtsymptoms.setText(null);
                DateOfBirth.setDate(null);
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(jPanel2, "Invalid ID. Please enter a valid number.", "Warning", JOptionPane.INFORMATION_MESSAGE);
            Logger.getLogger(DbPersonal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(jPanel2, "An error occurred while deleting the record: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(DbPersonal.class.getName()).log(Level.SEVERE, null, ex);
        }

        reloadPersonal();
    }//GEN-LAST:event_cmdDelete1ActionPerformed

    private void txtnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnameActionPerformed

    private void tblPersonalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPersonalMouseClicked
        
        int rowNo = tblPersonal.getSelectedRow();
        String id =  String.valueOf(tblPersonal.getValueAt(rowNo, 0));
        String name = String.valueOf(tblPersonal.getValueAt(rowNo, 1));
        String age = String.valueOf(tblPersonal.getValueAt(rowNo, 2));
        String sex = String.valueOf(tblPersonal.getValueAt(rowNo, 4));
        String nid=String .valueOf(tblPersonal.getValueAt(rowNo,3));
        String address = String.valueOf(tblPersonal.getValueAt(rowNo, 7));
        String contactNo=String.valueOf(tblPersonal.getValueAt(rowNo, 5));
        String email=String.valueOf(tblPersonal.getValueAt(rowNo,6));
        String bloodType=String.valueOf(tblPersonal.getValueAt(rowNo, 8));
        String dateOfBirth=String.valueOf(tblPersonal.getValueAt(rowNo, 10));
        String symptoms=String.valueOf(tblPersonal.getValueAt(rowNo, 9));
        
        txtpid.setText(id);
        txtname.setText(name);
        txtage.setText(age);
        
        
       if ("Male".equals(sex)) {
       rbMale.setSelected(true);
       } else {
       rbFemale.setSelected(true);
       }
       
        //cbSex.setSelectedItem(sex);
        //txtnid.setText(nid);
        txtaddress.setText(address);
        txtcontactno.setText(contactNo);
        txtnid.setText(nid);
        txtEmail.setText(email);
        txtsymptoms.setText(symptoms);
        cmbbloodtype.setSelectedItem(bloodType);
        
        SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
        try{
          
           Date bdate=sdf.parse(dateOfBirth);
            DateOfBirth.setDate(bdate);
            
        }catch(Exception e){
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_tblPersonalMouseClicked

    private void txtnidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnidActionPerformed

    private void btnsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchActionPerformed
        
        
        String searchQuery = txtsearch.getText(); // Assuming txtSearchField is your input field
    if (searchQuery == null || searchQuery.trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter a search term.", "Input Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
   // ArrayList<Personal> searchResults = search(searchQuery);
    
    DbPersonal dbPersonal = new DbPersonal();
    ArrayList<Personal> searchResults = dbPersonal.search(searchQuery);


    if (searchResults.isEmpty()) {
        JOptionPane.showMessageDialog(this, "No results found for: " + searchQuery, "Search Results", JOptionPane.INFORMATION_MESSAGE);
    } else {
        //  a table tblPersonal to display results
        DefaultTableModel tableModel = (DefaultTableModel) tblPersonal.getModel();
        tableModel.setRowCount(0); 

        for (Personal personal : searchResults) {
            tableModel.addRow(new Object[]{
                personal.getId(),
                personal.getName(),
                personal.getAge(),
                personal.getNid(),
                personal.getSex(),
                personal.getContactNo(),
                personal.getEmail(),
                personal.getAddress(),
                personal.getBloodType(),
                personal.getSymptoms(),
                personal.getDateOfBirth()
            });
        }
    }
        
        
    }//GEN-LAST:event_btnsearchActionPerformed

    private void txtsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchActionPerformed

    private void reloadPersonal(){
        PersonalModel stdModel = (PersonalModel)tblPersonal.getModel();
        stdModel.reloadPersonalRecords();
        tblPersonal.setModel(new PersonalModel(PersonalModel.getData(), PersonalModel.getColumns()));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(personal_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(personal_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(personal_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(personal_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new personal_info().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Clear;
    private com.toedter.calendar.JDateChooser DateOfBirth;
    private javax.swing.JButton btnsearch;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cmbbloodtype;
    private javax.swing.JButton cmdDelete1;
    private javax.swing.JButton cmdSave;
    private javax.swing.JButton cmdUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblName2;
    private javax.swing.JLabel lblSex;
    private javax.swing.JLabel lblSex1;
    private javax.swing.JLabel lblSex4;
    private javax.swing.JLabel lblSex5;
    private javax.swing.JLabel lblSex6;
    private javax.swing.JLabel lblSex7;
    private javax.swing.JRadioButton rbFemale;
    private javax.swing.JRadioButton rbMale;
    private javax.swing.JTable tblPersonal;
    private javax.swing.JButton txtEdit;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextArea txtaddress;
    private javax.swing.JTextField txtage;
    private javax.swing.JTextField txtcontactno;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtnid;
    private javax.swing.JTextField txtpid;
    private javax.swing.JTextField txtsearch;
    private javax.swing.JTextArea txtsymptoms;
    // End of variables declaration//GEN-END:variables

   String sex;
}
